Problem 3 Conceptual Questions
		1)The advantage of using signals over sleep in synchronizing processes is that sleep is completely reliant on time.  It takes in a time input and once that amount of time elapses the execution continues.  This is fine in some cases but in other cases it can be problematic if the amount of time the process stops for is not exact.  SIgnals are execution based.  Once the program receives a signal it will either stop or continue/start based on the signal.  Only the execution happens at this time.  So you can more accurately determine which program executes when with signals than by sleeping for an amount of time.
		2)The wait_for_children() function basically is telling the parent to wait before it executes and die for its children to do the same.  This is evident from the wait() command being changed to a kill() command in problem2.c.  The point of this is to prevent the children from becoming zombies and taking up necessary resources.  Additionally the effect of this waiting makes the printing order depth-first in the output instead of the standard order used in problem2.câ€™s output.
